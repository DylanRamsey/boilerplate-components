@use "sass:math";
@use "variables";
@use "mixins";

///
/// For messages to the user.
///
/// @color
///     Icon color.
/// @link-color
///     Optionally override the default link color.
/// @link-hover-color
///     Optionally override the link hover color.
///
@mixin messaging (
    $color: variables.$info,
    $font-size: variables.$body-font-size,
    $icon-size: 1.5rem,
    $line-height: variables.$body-line-height,
    $link-color: inherit,
    $link-hover-color: inherit
) {
    $b: &;

    $leading: $font-size * $line-height;

    background-color: variables.$gray-100;
    box-shadow: .25rem 0 0 inset, variables.$med-shadow;
    font-size: $font-size;
    line-height: $line-height;
    margin-bottom: 2rem;
    padding: variables.$padding;
    display: flex;

    &__icon {
        height: $icon-size;
        flex-shrink: 0;
        margin-right: variables.$h-space;
        width: $icon-size;
        @if $leading != $icon-size {
            transform: translateY(math.div($leading - $icon-size, 2));
        }
    }

    &__content {
        flex-grow: 1;
    }

    a {
        color: $link-color;
        text-decoration: underline;
        transition: color variables.$fade-easing variables.$fast;

        &:hover {
            color: $link-hover-color;
        }
    }

    @include mixins.color-modifiers(success warning error info) using ($color) {
        box-shadow: .25rem 0 0 $color inset, variables.$med-shadow;
        color: variables.$plain-text;

        #{$b}__icon {
            color: $color;
        }
    }

    &.-filled {
        box-shadow: variables.$med-shadow;

        @include mixins.color-modifiers(success warning error info) using ($color) {
            background-color: $color;
            color: blackwhite($color, variables.$plain-text);

            #{$b}__icon {
                color: inherit;
            }
        }
    }
}

.messaging {
    @include messaging;
}
