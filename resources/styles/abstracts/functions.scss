@use "sass:color";
@use "sass:math";

///
/// returns a properly scaled font size based on a given max size, assuming a
/// minimum size of 1rem.
///
@function type-scale($max, $ratio, $accuracy: 1000) {
    $m: math.div($max, $max * 0 + 1);
    $u: math.div($max, $m);
    @return math.div($u * math.round(math.pow($m, $ratio) * $accuracy), $accuracy);
}

///
/// This is shim for files that aren't using @use yet but need division.
///
@function divide($a, $b) {
    @return math.div($a, $b);
}


@function append-each($list, $append, $separator: '') {
    $new-list: ();
    @if $separator == '' {
        $separator: list.separator($list);
    }
    @each $value in $list {
        $new-list: list.append($new-list, $value $append, $separator);
    }

    @return $new-list;
}

@function _relative-lum($n) {
  @if $n < 0.03928 {
    @return math.div($n, 12.92);
  } @else {
    @return math.pow(math.div($n+0.055, 1.055), 2.4);
  }
}

@function _relative-luminance($c) {
  $r: _relative-lum(math.div(color.red($c), 255));
  $g: _relative-lum(math.div(color.green($c), 255));
  $b: _relative-lum(math.div(color.blue($c), 255));

  @return $r*0.2126+$g*0.7152+$b*0.0722;
}

@function contrast($c, $on-black: false) {
  @if $on-black {
    @return math.div(_relative-luminance($c) + 0.05, 0.05);
  } @else {
    @return math.div(1.05, _relative-luminance($c) + 0.05);
  }
}

@function blackwhite($c, $black: $black, $white: $white) {
    @if contrast($c) < contrast($c, true) {
        @return $black;
    } @else {
        @return $white;
    }
}
